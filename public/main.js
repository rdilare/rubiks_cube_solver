!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n),n.default="\nvar THREE = require('three')\nimport * from 'src/three/controls/TrackballControls.js'\n\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\nvar renderer = new THREE.WebGLRenderer();\n\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nvar geometry = new THREE.BoxGeometry();\nvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\nvar cube = new THREE.Mesh( geometry, material );\n\nvar controls = new THREE.TrackballControls( camera, renderer.domElement );\n\nvar cube1 = new THREE.Mesh( geometry, material );\ncube1.position.x = -2;\ncube1.position.y = 2;\n\nvar obj = new THREE.Object3D();\n\n\n\n// var geometry = new THREE.BoxBufferGeometry( 100, 100, 100 );\nvar edges = new THREE.EdgesGeometry( geometry );\nvar line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xff0000 } ) );\nscene.add( line );\n\n\n\nscene.add( cube );\nscene.add( cube1 );\n\ncamera.position.z = 5;\ncontrols.update();\n\n\nvar t = 0;\n\nvar animate = function () {\n\trequestAnimationFrame( animate );\n\n\t// cube.rotation.x += 0.01;\n\tcube.rotation.z -= 0.01;\n\t// line.rotation.z -= 0.01;\n\n\tcube1.rotation.z -= .01;\n\tcube1.position.x = 2*Math.sin(t);\n\tcube1.position.y = 2*Math.cos(t);\n\n\tline.rotation.z -= .01;\n\tline.position.x = 2*Math.sin(t);\n\tline.position.y = 2*Math.cos(t);\n\n\tt+=.01;\n\trenderer.render( scene, camera );\n\tcontrols.update();\n\n};\n\nanimate();\n\n"}]);